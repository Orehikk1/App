// ✅ Курс валют с эффектом акселерометра (исправлено!)
struct ExchangeRateView: View {
    @ObservedObject var viewModel: CardViewModel
    @State private var xOffset: CGFloat = 0
    @State private var yOffset: CGFloat = 0
    private let motionManager = CMMotionManager()

    var body: some View {
        VStack {
            if let rate = viewModel.euroToHufRate {
                VStack(alignment: .center, spacing: 8) {
                    Text("💱 Exchange Rate")
                        .font(.headline)
                        .foregroundColor(.black.opacity(0.8))
                    
                    Text("1 EUR = \(rate, specifier: "%.2f") HUF")
                        .font(.largeTitle.bold())
                        .foregroundColor(.black)
                        .padding(.vertical, 5)
                    
                    Text("Updated live")
                        .font(.caption)
                        .foregroundColor(.black.opacity(0.6))
                }
                .padding()
                .background(
                    RoundedRectangle(cornerRadius: 20)
                        .fill(Color.white)
                        .shadow(color: .black.opacity(0.2), radius: 10)
                )
                .offset(x: xOffset, y: yOffset) // 📌 Реакция на движение
                .animation(.spring(response: 0.5, dampingFraction: 0.6), value: xOffset)
                .onAppear {
                    startMotionUpdates()
                }
            } else {
                Text("Loading exchange rate EUR → HUF...")
                    .foregroundColor(.gray)
                    .font(.headline)
                    .padding()
            }
        }
    }
    
    // ✅ Исправленный акселерометр (с правильным центрированием)
    private func startMotionUpdates() {
        if motionManager.isAccelerometerAvailable {
            motionManager.accelerometerUpdateInterval = 0.1
            motionManager.startAccelerometerUpdates(to: .main) { data, error in
                guard let data = data, error == nil else { return }

                withAnimation(.easeOut(duration: 0.3)) {
                    let threshold: CGFloat = 0.05 // 🔹 Убираем резкие движения
                    
                    // 📌 Если телефон ЛЕЖИТ (y ≈ 1.0) → Ставим иконку ПО ЦЕНТРУ
                    if abs(data.acceleration.y) > 0.95 {
                        xOffset = 0
                        yOffset = 0
                    } 
                    // 📌 Если телефон ВЕРТИКАЛЬНО (y ≈ 0.0) → Центрируем вручную
                    else {
                        let newX = CGFloat(data.acceleration.y) * 10 // Уменьшаем сдвиг
                        let newY = CGFloat(data.acceleration.x) * -10 // Инвертируем X

                        // 📌 Делаем плавную настройку
                        if abs(newX) > threshold { xOffset = newX }
                        if abs(newY) > threshold { yOffset = newY }
                    }
                }
            }
        }
    }
}
